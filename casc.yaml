jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: ${JENKINS_ADMIN_ID}
          password: ${JENKINS_ADMIN_PASSWORD}
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "GROUP:Agent/Build:authenticated"
        - "GROUP:Agent/Configure:authenticated"
        - "GROUP:Agent/Connect:authenticated"
        - "GROUP:Agent/Create:authenticated"
        - "GROUP:Agent/Delete:authenticated"
        - "GROUP:Agent/Disconnect:authenticated"
        - "GROUP:Credentials/Create:authenticated"
        - "GROUP:Credentials/Delete:authenticated"
        - "GROUP:Credentials/ManageDomains:authenticated"
        - "GROUP:Credentials/Update:authenticated"
        - "GROUP:Credentials/View:authenticated"
        - "GROUP:Job/Build:authenticated"
        - "GROUP:Job/Cancel:authenticated"
        - "GROUP:Job/Configure:authenticated"
        - "GROUP:Job/Create:authenticated"
        - "GROUP:Job/Delete:authenticated"
        - "GROUP:Job/Discover:authenticated"
        - "GROUP:Job/Move:authenticated"
        - "GROUP:Job/Read:authenticated"
        - "GROUP:Job/Workspace:authenticated"
        - "GROUP:Overall/Administer:authenticated"
        - "GROUP:Overall/Read:authenticated"
        - "GROUP:Run/Delete:authenticated"
        - "GROUP:Run/Replay:authenticated"
        - "GROUP:Run/Update:authenticated"
        - "GROUP:View/Configure:authenticated"
        - "GROUP:View/Create:authenticated"
        - "GROUP:View/Delete:authenticated"
        - "GROUP:View/Read:authenticated"

  remotingSecurity:
    enabled: true

security:
  queueItemAuthenticator:
    authenticators:
      - global:
          strategy: triggeringUsersAuthorizationStrategy


credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
              id: "MONGO_CONNECTION_STRING"
              secret: "mongodb://root:mongo123*@mongodb:27017/?authSource=admin"
              description: "Connection String MongoDB"
              scope: GLOBAL
          - usernamePassword:
              id: "sonarqube-login"
              username: "admin"
              password: "admin123"
              description: "Sonarqube credentials"
              scope: GLOBAL


unclassified:
  location:
    url: http://localhost:8080/

  sonarGlobalConfiguration:
    installations:
      - name: "sonarQubeServer"
        serverUrl: "http://sonarqube:9000"
        serverAuthenticationToken: ""
        credentialsId: ""
        webhookSecretId: ""
        mojoVersion: ""
        additionalProperties: ""
        additionalAnalysisProperties: ""
        triggers:
          envVar: ""
          skipScmCause: false
          skipUpstreamCause: false
    buildWrapperEnabled: true



tool:
  sonarRunnerInstallation:
    installations:
      - name: "sonarQubeScanner"
        home: ""
        properties:
          - installSource:
              installers:
                - sonarRunnerInstaller:
                    id: "4.8.0.2856"